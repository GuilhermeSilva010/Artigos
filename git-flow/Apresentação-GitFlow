Apresentação Temas

- Artigo sobre Git Flow - Sim - Praticar comandos.
- O que é um BRMS? - Pesquisar sobre
- O que é software de missão crítica? - Pesquisar sobre
- Processamento paralelo - Pesquisar sobre
- Processamento distribuido - Rever conceitos
- SOA - Arquitetura Orientada a Serviços - Pesquisar sobre
- OAUTH2 - Rever conceitos 
- API Manager - ótimo tema
- API Gateway - Descartado
- AWS Lambda -  Descartado


Git Flow

Git Flow é uma forma abstrata do fluxo de trabalho.

Instalando no Ubuntu 18.04

sudo apt-get update 
sudo apt-get upgrade
sudo apt-get install git-flow
(Vou deixar o link no final do documento para instalar o git-flow no windows e Mac).

Podemos dizer que temos dois tipos de branchs, as principais e as de suporte.
Principais - Master e developed
Suporte - Feature, Release e Hotfix.

Master - branch principal, não alterada diretamente. ambiente de produção, sempre ativo.

Develop - branch onde recebe os projeto, servindo de intermediario para as features e releases, sempre ativo.

Feature - Onde é feita as alterações e implementações de novos recursos, branch efemera.

Release - Ambiente pré produção, homologação onde é feito testes. branch efemera.

Hotfix - Uma branch crítica, onde o proejto está em produção e precisa de reparo rapidamente, e após a alteração já volta para a Master.

Gestão de controle de versionamento e organização de atualizações nas aplicações.
Esse plano é recomendado para projetos pequenos onde participa do projeto 1 a 3 desenvolvedores.
Git flow faz o merge(fundir/junção) automatico das funcionalidades criadas.

comando para executar o git flow

git flow init  - para iniciar dentro do diretorio.

git branch  - para ver suas ramificações (branch), ao iniciar automaticamente você começa na branch de developed.

git flow feature start soma(nome da feature)

   vim soma 
    "alterando recurso soma, atualização da feature"

  git add .
  git commit -m 'Alterando recurso soma'

git flow feature finish soma
    aparece para adicionar comentário no merge da feature e developed, com nano comandos crtl + S, 
    para salvar e crtl + x sair do arquivo.

git flow release start 0.1.0(tag) - abrindo uma release, ambiente pre-produção para execução de testes das alterações feitas. Sendo assim o ambiente de homologação 

git flow release finish 0.1.0 - Fechamento da release e enviando para a Master.
Colocando comentários da mudança feita e comentarios sobre a tag.

Resumo
O fluxo geral do Gitflow é:

1.Uma ramificação de desenvolvimento é criada a partir da branch principal
2.Uma ramificação de lançamento é criada a partir da ramificação de desenvolvimento
3.Ramificações de recurso são criadas a partir da ramificação de desenvolvimento
4.Quando um recurso é concluído, ele é mesclado na ramificação de desenvolvimento
5.Quando a ramificação de lançamento é concluída, ela é mesclada nas ramificações de desenvolvimento e principal
6.Caso um problema seja detectado na branch principal,uma ramificação de hotfix é criada a partir da principal
7.Após a conclusão da ramificação de hotfix, ela é mesclada para as ramificações de desenvolvimento e principal

refencias:

https://www.atlassian.com/br/git/tutorials/comparing-workflows/gitflow-workflow#:~:text=O%20conjunto%20de%20ferramentas%20git,tem%20um%20processo%20de%20instala%C3%A7%C3%A3o.&text=O%20Git%2Dflow%20%C3%A9%20um,ser%20criar%20ramifica%C3%A7%C3%B5es%20para%20voc%C3%AA.
https://www.youtube.com/watch?v=wzxBR4pOTTs
https://www.youtube.com/watch?v=oweffeS8TRc
